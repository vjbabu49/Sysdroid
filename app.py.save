from flask import Flask, render_template, request
from ansible import context
from ansible.cli import CLI
from ansible.module_utils.common.collections import ImmutableDict
from ansible.executor.playbook_executor import PlaybookExecutor
from ansible.parsing.dataloader import DataLoader
from ansible.inventory.manager import InventoryManager
from ansible.vars.manager import VariableManager

app = Flask(__name__)


@app.route("/", methods=['GET', 'POST'])
def index():
    if form.validate_on_submit():
        if request.form['Restart_servers'] == 'reboot':
            loader = DataLoader()

            context.CLIARGS = ImmutableDict(tags={}, listtags=False, listtasks=False, listhosts=False, syntax=False, connection='ssh',
                                            module_path=None, forks=100, remote_user='ec2-user', private_key_file='/home/vijay/test_key_pair.pem',
                                            ssh_common_args=None, ssh_extra_args=None, sftp_extra_args=None, scp_extra_args=None, become=True,
                                            become_method='sudo', become_user='root', verbosity=True, check=False, start_at_task=None)

            inventory = InventoryManager(
                loader=loader, sources=('/home/vijay/hosts',))

            variable_manager = VariableManager(
                loader=loader, inventory=inventory, version_info=CLI.version_info(gitinfo=False))

            pbex = PlaybookExecutor(playbooks=['/home/vijay/test_reboot_server.yaml'],
                                    inventory=inventory, variable_manager=variable_manager, loader=loader, passwords={})

            results = pbex.run()
   # elif  request.form.get('action2') == 'VALUE2':
        #    pass # do something else
   # else:
     #   pass # unknown
    elif request.method == 'GET':
        return render_template('index.html')
